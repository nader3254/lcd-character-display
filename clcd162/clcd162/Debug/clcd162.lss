
clcd162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000045a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002c  00800060  0000045a  000004ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ee5  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000836  00000000  00000000  000014e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008a8  00000000  00000000  00001d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000154  00000000  00000000  000025c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003eb  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009c3  00000000  00000000  00002b03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000034c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e5       	ldi	r30, 0x5A	; 90
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 38       	cpi	r26, 0x8C	; 140
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <main>
  7a:	0c 94 2b 02 	jmp	0x456	; 0x456 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_command_executer>:
  82:	ef 92       	push	r14
  84:	ff 92       	push	r15
  86:	0f 93       	push	r16
  88:	1f 93       	push	r17
  8a:	cf 93       	push	r28
  8c:	df 93       	push	r29
  8e:	8c 01       	movw	r16, r24
  90:	7b 01       	movw	r14, r22
  92:	c9 e0       	ldi	r28, 0x09	; 9
  94:	d0 e0       	ldi	r29, 0x00	; 0
  96:	14 c0       	rjmp	.+40     	; 0xc0 <lcd_command_executer+0x3e>
  98:	e0 fe       	sbrs	r14, 0
  9a:	08 c0       	rjmp	.+16     	; 0xac <lcd_command_executer+0x2a>
  9c:	68 e6       	ldi	r22, 0x68	; 104
  9e:	f8 01       	movw	r30, r16
  a0:	ec 0f       	add	r30, r28
  a2:	fd 1f       	adc	r31, r29
  a4:	80 81       	ld	r24, Z
  a6:	0e 94 02 01 	call	0x204	; 0x204 <out>
  aa:	07 c0       	rjmp	.+14     	; 0xba <lcd_command_executer+0x38>
  ac:	6c e6       	ldi	r22, 0x6C	; 108
  ae:	f8 01       	movw	r30, r16
  b0:	ec 0f       	add	r30, r28
  b2:	fd 1f       	adc	r31, r29
  b4:	80 81       	ld	r24, Z
  b6:	0e 94 02 01 	call	0x204	; 0x204 <out>
  ba:	f5 94       	asr	r15
  bc:	e7 94       	ror	r14
  be:	21 97       	sbiw	r28, 0x01	; 1
  c0:	dd 23       	and	r29, r29
  c2:	54 f7       	brge	.-44     	; 0x98 <lcd_command_executer+0x16>
  c4:	68 e6       	ldi	r22, 0x68	; 104
  c6:	f8 01       	movw	r30, r16
  c8:	82 85       	ldd	r24, Z+10	; 0x0a
  ca:	0e 94 02 01 	call	0x204	; 0x204 <out>
  ce:	f8 01       	movw	r30, r16
  d0:	83 81       	ldd	r24, Z+3	; 0x03
  d2:	0e 94 91 01 	call	0x322	; 0x322 <inp>
  d6:	f8 01       	movw	r30, r16
  d8:	83 81       	ldd	r24, Z+3	; 0x03
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	e1 f3       	breq	.-8      	; 0xd6 <lcd_command_executer+0x54>
  de:	6c e6       	ldi	r22, 0x6C	; 108
  e0:	82 85       	ldd	r24, Z+10	; 0x0a
  e2:	0e 94 02 01 	call	0x204	; 0x204 <out>
  e6:	c0 e0       	ldi	r28, 0x00	; 0
  e8:	d0 e0       	ldi	r29, 0x00	; 0
  ea:	08 c0       	rjmp	.+16     	; 0xfc <lcd_command_executer+0x7a>
  ec:	f8 01       	movw	r30, r16
  ee:	ec 0f       	add	r30, r28
  f0:	fd 1f       	adc	r31, r29
  f2:	6c e6       	ldi	r22, 0x6C	; 108
  f4:	80 81       	ld	r24, Z
  f6:	0e 94 02 01 	call	0x204	; 0x204 <out>
  fa:	21 96       	adiw	r28, 0x01	; 1
  fc:	c9 30       	cpi	r28, 0x09	; 9
  fe:	d1 05       	cpc	r29, r1
 100:	ac f3       	brlt	.-22     	; 0xec <lcd_command_executer+0x6a>
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	1f 91       	pop	r17
 108:	0f 91       	pop	r16
 10a:	ff 90       	pop	r15
 10c:	ef 90       	pop	r14
 10e:	08 95       	ret

00000110 <lcd_initialize>:
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	ec 01       	movw	r28, r24
 116:	68 e3       	ldi	r22, 0x38	; 56
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 11e:	61 e0       	ldi	r22, 0x01	; 1
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	ce 01       	movw	r24, r28
 124:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 128:	62 e0       	ldi	r22, 0x02	; 2
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	ce 01       	movw	r24, r28
 12e:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 132:	66 e0       	ldi	r22, 0x06	; 6
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	ce 01       	movw	r24, r28
 138:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 13c:	6f e0       	ldi	r22, 0x0F	; 15
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	ce 01       	movw	r24, r28
 142:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <lcd_write>:
 14c:	ef 92       	push	r14
 14e:	ff 92       	push	r15
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	7c 01       	movw	r14, r24
 158:	16 2f       	mov	r17, r22
 15a:	68 e6       	ldi	r22, 0x68	; 104
 15c:	fc 01       	movw	r30, r24
 15e:	80 81       	ld	r24, Z
 160:	0e 94 02 01 	call	0x204	; 0x204 <out>
 164:	6c e6       	ldi	r22, 0x6C	; 108
 166:	f7 01       	movw	r30, r14
 168:	81 81       	ldd	r24, Z+1	; 0x01
 16a:	0e 94 02 01 	call	0x204	; 0x204 <out>
 16e:	c9 e0       	ldi	r28, 0x09	; 9
 170:	d0 e0       	ldi	r29, 0x00	; 0
 172:	13 c0       	rjmp	.+38     	; 0x19a <lcd_write+0x4e>
 174:	10 ff       	sbrs	r17, 0
 176:	08 c0       	rjmp	.+16     	; 0x188 <lcd_write+0x3c>
 178:	68 e6       	ldi	r22, 0x68	; 104
 17a:	f7 01       	movw	r30, r14
 17c:	ec 0f       	add	r30, r28
 17e:	fd 1f       	adc	r31, r29
 180:	80 81       	ld	r24, Z
 182:	0e 94 02 01 	call	0x204	; 0x204 <out>
 186:	07 c0       	rjmp	.+14     	; 0x196 <lcd_write+0x4a>
 188:	6c e6       	ldi	r22, 0x6C	; 108
 18a:	f7 01       	movw	r30, r14
 18c:	ec 0f       	add	r30, r28
 18e:	fd 1f       	adc	r31, r29
 190:	80 81       	ld	r24, Z
 192:	0e 94 02 01 	call	0x204	; 0x204 <out>
 196:	16 95       	lsr	r17
 198:	21 97       	sbiw	r28, 0x01	; 1
 19a:	c2 30       	cpi	r28, 0x02	; 2
 19c:	d1 05       	cpc	r29, r1
 19e:	54 f7       	brge	.-44     	; 0x174 <lcd_write+0x28>
 1a0:	68 e6       	ldi	r22, 0x68	; 104
 1a2:	f7 01       	movw	r30, r14
 1a4:	82 85       	ldd	r24, Z+10	; 0x0a
 1a6:	0e 94 02 01 	call	0x204	; 0x204 <out>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1aa:	83 ed       	ldi	r24, 0xD3	; 211
 1ac:	90 e3       	ldi	r25, 0x30	; 48
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <lcd_write+0x62>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <lcd_write+0x68>
 1b4:	00 00       	nop
 1b6:	6c e6       	ldi	r22, 0x6C	; 108
 1b8:	f7 01       	movw	r30, r14
 1ba:	82 85       	ldd	r24, Z+10	; 0x0a
 1bc:	0e 94 02 01 	call	0x204	; 0x204 <out>
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	1f 91       	pop	r17
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	08 95       	ret

000001cc <lcd_write_string>:
 1cc:	ef 92       	push	r14
 1ce:	ff 92       	push	r15
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	7c 01       	movw	r14, r24
 1da:	8b 01       	movw	r16, r22
 1dc:	c0 e0       	ldi	r28, 0x00	; 0
 1de:	d0 e0       	ldi	r29, 0x00	; 0
 1e0:	04 c0       	rjmp	.+8      	; 0x1ea <lcd_write_string+0x1e>
 1e2:	c7 01       	movw	r24, r14
 1e4:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
 1e8:	21 96       	adiw	r28, 0x01	; 1
 1ea:	f8 01       	movw	r30, r16
 1ec:	ec 0f       	add	r30, r28
 1ee:	fd 1f       	adc	r31, r29
 1f0:	60 81       	ld	r22, Z
 1f2:	61 11       	cpse	r22, r1
 1f4:	f6 cf       	rjmp	.-20     	; 0x1e2 <lcd_write_string+0x16>
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	1f 91       	pop	r17
 1fc:	0f 91       	pop	r16
 1fe:	ff 90       	pop	r15
 200:	ef 90       	pop	r14
 202:	08 95       	ret

00000204 <out>:
 204:	4a e0       	ldi	r20, 0x0A	; 10
 206:	50 e0       	ldi	r21, 0x00	; 0
 208:	87 c0       	rjmp	.+270    	; 0x318 <out+0x114>
 20a:	9a 01       	movw	r18, r20
 20c:	42 31       	cpi	r20, 0x12	; 18
 20e:	51 05       	cpc	r21, r1
 210:	e8 f4       	brcc	.+58     	; 0x24c <out+0x48>
 212:	e8 2f       	mov	r30, r24
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	4e 17       	cp	r20, r30
 218:	5f 07       	cpc	r21, r31
 21a:	c1 f4       	brne	.+48     	; 0x24c <out+0x48>
 21c:	4a 50       	subi	r20, 0x0A	; 10
 21e:	2a b3       	in	r18, 0x1a	; 26
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <out+0x26>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	4a 95       	dec	r20
 22c:	e2 f7       	brpl	.-8      	; 0x226 <out+0x22>
 22e:	28 2b       	or	r18, r24
 230:	2a bb       	out	0x1a, r18	; 26
 232:	68 36       	cpi	r22, 0x68	; 104
 234:	11 f0       	breq	.+4      	; 0x23a <out+0x36>
 236:	68 34       	cpi	r22, 0x48	; 72
 238:	21 f4       	brne	.+8      	; 0x242 <out+0x3e>
 23a:	9b b3       	in	r25, 0x1b	; 27
 23c:	89 2b       	or	r24, r25
 23e:	8b bb       	out	0x1b, r24	; 27
 240:	08 95       	ret
 242:	9b b3       	in	r25, 0x1b	; 27
 244:	80 95       	com	r24
 246:	89 23       	and	r24, r25
 248:	8b bb       	out	0x1b, r24	; 27
 24a:	08 95       	ret
 24c:	f9 01       	movw	r30, r18
 24e:	72 97       	sbiw	r30, 0x12	; 18
 250:	3a 97       	sbiw	r30, 0x0a	; 10
 252:	e8 f4       	brcc	.+58     	; 0x28e <out+0x8a>
 254:	e8 2f       	mov	r30, r24
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	4e 17       	cp	r20, r30
 25a:	5f 07       	cpc	r21, r31
 25c:	c1 f4       	brne	.+48     	; 0x28e <out+0x8a>
 25e:	44 51       	subi	r20, 0x14	; 20
 260:	27 b3       	in	r18, 0x17	; 23
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <out+0x68>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	4a 95       	dec	r20
 26e:	e2 f7       	brpl	.-8      	; 0x268 <out+0x64>
 270:	28 2b       	or	r18, r24
 272:	27 bb       	out	0x17, r18	; 23
 274:	68 36       	cpi	r22, 0x68	; 104
 276:	11 f0       	breq	.+4      	; 0x27c <out+0x78>
 278:	68 34       	cpi	r22, 0x48	; 72
 27a:	21 f4       	brne	.+8      	; 0x284 <out+0x80>
 27c:	98 b3       	in	r25, 0x18	; 24
 27e:	89 2b       	or	r24, r25
 280:	88 bb       	out	0x18, r24	; 24
 282:	08 95       	ret
 284:	98 b3       	in	r25, 0x18	; 24
 286:	80 95       	com	r24
 288:	89 23       	and	r24, r25
 28a:	88 bb       	out	0x18, r24	; 24
 28c:	08 95       	ret
 28e:	f9 01       	movw	r30, r18
 290:	7c 97       	sbiw	r30, 0x1c	; 28
 292:	3a 97       	sbiw	r30, 0x0a	; 10
 294:	e8 f4       	brcc	.+58     	; 0x2d0 <out+0xcc>
 296:	e8 2f       	mov	r30, r24
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	4e 17       	cp	r20, r30
 29c:	5f 07       	cpc	r21, r31
 29e:	c1 f4       	brne	.+48     	; 0x2d0 <out+0xcc>
 2a0:	4e 51       	subi	r20, 0x1E	; 30
 2a2:	24 b3       	in	r18, 0x14	; 20
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <out+0xaa>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	4a 95       	dec	r20
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <out+0xa6>
 2b2:	28 2b       	or	r18, r24
 2b4:	24 bb       	out	0x14, r18	; 20
 2b6:	68 36       	cpi	r22, 0x68	; 104
 2b8:	11 f0       	breq	.+4      	; 0x2be <out+0xba>
 2ba:	68 34       	cpi	r22, 0x48	; 72
 2bc:	21 f4       	brne	.+8      	; 0x2c6 <out+0xc2>
 2be:	95 b3       	in	r25, 0x15	; 21
 2c0:	89 2b       	or	r24, r25
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	08 95       	ret
 2c6:	95 b3       	in	r25, 0x15	; 21
 2c8:	80 95       	com	r24
 2ca:	89 23       	and	r24, r25
 2cc:	85 bb       	out	0x15, r24	; 21
 2ce:	08 95       	ret
 2d0:	26 52       	subi	r18, 0x26	; 38
 2d2:	31 09       	sbc	r19, r1
 2d4:	2a 30       	cpi	r18, 0x0A	; 10
 2d6:	31 05       	cpc	r19, r1
 2d8:	e8 f4       	brcc	.+58     	; 0x314 <out+0x110>
 2da:	28 2f       	mov	r18, r24
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	42 17       	cp	r20, r18
 2e0:	53 07       	cpc	r21, r19
 2e2:	c1 f4       	brne	.+48     	; 0x314 <out+0x110>
 2e4:	48 52       	subi	r20, 0x28	; 40
 2e6:	21 b3       	in	r18, 0x11	; 17
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <out+0xee>
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	4a 95       	dec	r20
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <out+0xea>
 2f6:	28 2b       	or	r18, r24
 2f8:	21 bb       	out	0x11, r18	; 17
 2fa:	68 36       	cpi	r22, 0x68	; 104
 2fc:	11 f0       	breq	.+4      	; 0x302 <out+0xfe>
 2fe:	68 34       	cpi	r22, 0x48	; 72
 300:	21 f4       	brne	.+8      	; 0x30a <out+0x106>
 302:	92 b3       	in	r25, 0x12	; 18
 304:	89 2b       	or	r24, r25
 306:	82 bb       	out	0x12, r24	; 18
 308:	08 95       	ret
 30a:	92 b3       	in	r25, 0x12	; 18
 30c:	80 95       	com	r24
 30e:	89 23       	and	r24, r25
 310:	82 bb       	out	0x12, r24	; 18
 312:	08 95       	ret
 314:	4f 5f       	subi	r20, 0xFF	; 255
 316:	5f 4f       	sbci	r21, 0xFF	; 255
 318:	40 33       	cpi	r20, 0x30	; 48
 31a:	51 05       	cpc	r21, r1
 31c:	0c f4       	brge	.+2      	; 0x320 <out+0x11c>
 31e:	75 cf       	rjmp	.-278    	; 0x20a <out+0x6>
 320:	08 95       	ret

00000322 <inp>:
 322:	4a e0       	ldi	r20, 0x0A	; 10
 324:	50 e0       	ldi	r21, 0x00	; 0
 326:	5f c0       	rjmp	.+190    	; 0x3e6 <inp+0xc4>
 328:	9a 01       	movw	r18, r20
 32a:	42 31       	cpi	r20, 0x12	; 18
 32c:	51 05       	cpc	r21, r1
 32e:	90 f4       	brcc	.+36     	; 0x354 <inp+0x32>
 330:	68 2f       	mov	r22, r24
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	46 17       	cp	r20, r22
 336:	57 07       	cpc	r21, r23
 338:	69 f4       	brne	.+26     	; 0x354 <inp+0x32>
 33a:	e6 ef       	ldi	r30, 0xF6	; 246
 33c:	e4 0f       	add	r30, r20
 33e:	9a b3       	in	r25, 0x1a	; 26
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	70 e0       	ldi	r23, 0x00	; 0
 344:	02 c0       	rjmp	.+4      	; 0x34a <inp+0x28>
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	ea 95       	dec	r30
 34c:	e2 f7       	brpl	.-8      	; 0x346 <inp+0x24>
 34e:	60 95       	com	r22
 350:	69 23       	and	r22, r25
 352:	6a bb       	out	0x1a, r22	; 26
 354:	b9 01       	movw	r22, r18
 356:	62 51       	subi	r22, 0x12	; 18
 358:	71 09       	sbc	r23, r1
 35a:	6a 30       	cpi	r22, 0x0A	; 10
 35c:	71 05       	cpc	r23, r1
 35e:	90 f4       	brcc	.+36     	; 0x384 <inp+0x62>
 360:	68 2f       	mov	r22, r24
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	46 17       	cp	r20, r22
 366:	57 07       	cpc	r21, r23
 368:	69 f4       	brne	.+26     	; 0x384 <inp+0x62>
 36a:	ec ee       	ldi	r30, 0xEC	; 236
 36c:	e4 0f       	add	r30, r20
 36e:	97 b3       	in	r25, 0x17	; 23
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <inp+0x58>
 376:	66 0f       	add	r22, r22
 378:	77 1f       	adc	r23, r23
 37a:	ea 95       	dec	r30
 37c:	e2 f7       	brpl	.-8      	; 0x376 <inp+0x54>
 37e:	60 95       	com	r22
 380:	69 23       	and	r22, r25
 382:	67 bb       	out	0x17, r22	; 23
 384:	b9 01       	movw	r22, r18
 386:	6c 51       	subi	r22, 0x1C	; 28
 388:	71 09       	sbc	r23, r1
 38a:	6a 30       	cpi	r22, 0x0A	; 10
 38c:	71 05       	cpc	r23, r1
 38e:	90 f4       	brcc	.+36     	; 0x3b4 <inp+0x92>
 390:	68 2f       	mov	r22, r24
 392:	70 e0       	ldi	r23, 0x00	; 0
 394:	46 17       	cp	r20, r22
 396:	57 07       	cpc	r21, r23
 398:	69 f4       	brne	.+26     	; 0x3b4 <inp+0x92>
 39a:	e2 ee       	ldi	r30, 0xE2	; 226
 39c:	e4 0f       	add	r30, r20
 39e:	94 b3       	in	r25, 0x14	; 20
 3a0:	61 e0       	ldi	r22, 0x01	; 1
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <inp+0x88>
 3a6:	66 0f       	add	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	ea 95       	dec	r30
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <inp+0x84>
 3ae:	60 95       	com	r22
 3b0:	69 23       	and	r22, r25
 3b2:	64 bb       	out	0x14, r22	; 20
 3b4:	26 52       	subi	r18, 0x26	; 38
 3b6:	31 09       	sbc	r19, r1
 3b8:	2a 30       	cpi	r18, 0x0A	; 10
 3ba:	31 05       	cpc	r19, r1
 3bc:	90 f4       	brcc	.+36     	; 0x3e2 <inp+0xc0>
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	42 17       	cp	r20, r18
 3c4:	53 07       	cpc	r21, r19
 3c6:	69 f4       	brne	.+26     	; 0x3e2 <inp+0xc0>
 3c8:	68 ed       	ldi	r22, 0xD8	; 216
 3ca:	64 0f       	add	r22, r20
 3cc:	91 b3       	in	r25, 0x11	; 17
 3ce:	21 e0       	ldi	r18, 0x01	; 1
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <inp+0xb6>
 3d4:	22 0f       	add	r18, r18
 3d6:	33 1f       	adc	r19, r19
 3d8:	6a 95       	dec	r22
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <inp+0xb2>
 3dc:	20 95       	com	r18
 3de:	29 23       	and	r18, r25
 3e0:	21 bb       	out	0x11, r18	; 17
 3e2:	4f 5f       	subi	r20, 0xFF	; 255
 3e4:	5f 4f       	sbci	r21, 0xFF	; 255
 3e6:	40 33       	cpi	r20, 0x30	; 48
 3e8:	51 05       	cpc	r21, r1
 3ea:	0c f4       	brge	.+2      	; 0x3ee <inp+0xcc>
 3ec:	9d cf       	rjmp	.-198    	; 0x328 <inp+0x6>
 3ee:	08 95       	ret

000003f0 <main>:
#define db2 B2
#define db1 B1
#define db0 B0

int main(void)
{
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	2b 97       	sbiw	r28, 0x0b	; 11
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	f8 94       	cli
 3fe:	de bf       	out	0x3e, r29	; 62
 400:	0f be       	out	0x3f, r0	; 63
 402:	cd bf       	out	0x3d, r28	; 61
	 uint8_t lcd1[]={rs,rw,db7,db6,db5,db4,db3,db2,db1,db0,en};
 404:	8b e0       	ldi	r24, 0x0B	; 11
 406:	e0 e6       	ldi	r30, 0x60	; 96
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	de 01       	movw	r26, r28
 40c:	11 96       	adiw	r26, 0x01	; 1
 40e:	01 90       	ld	r0, Z+
 410:	0d 92       	st	X+, r0
 412:	8a 95       	dec	r24
 414:	e1 f7       	brne	.-8      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
	// lcd_command_executer(z,Entry_mode_cursorR);_delay_ms(500);
	// lcd_command_executer(lcd1,Display_on_showcursor_Blink);_delay_ms(500);
	// lcd_command_executer(lcd1,Display_shiftR);_delay_ms(500);
	// lcd_command_executer(z,Display_on_hidecursor_noBlink);_delay_ms(500);
	// lcd_command_executer(lcd1,Display_shiftR);
	lcd_initialize(lcd1);
 416:	ce 01       	movw	r24, r28
 418:	01 96       	adiw	r24, 0x01	; 1
 41a:	0e 94 88 00 	call	0x110	; 0x110 <lcd_initialize>
	//lcd_write(lcd1,'n');_delay_ms(200);
	//lcd_write(lcd1,'a');_delay_ms(2);
	//lcd_write(lcd1,'d');_delay_ms(2);
	//lcd_write(lcd1,'e');_delay_ms(2);
	//lcd_write(lcd1,'r');_delay_ms(2);
	lcd_write_string(lcd1,"Welecome to MR. Nader Hany Ahmed");
 41e:	6b e6       	ldi	r22, 0x6B	; 107
 420:	70 e0       	ldi	r23, 0x00	; 0
 422:	ce 01       	movw	r24, r28
 424:	01 96       	adiw	r24, 0x01	; 1
 426:	0e 94 e6 00 	call	0x1cc	; 0x1cc <lcd_write_string>
	
    while (1) 
    {
		lcd_command_executer(lcd1,Display_shiftl);
 42a:	68 e1       	ldi	r22, 0x18	; 24
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	ce 01       	movw	r24, r28
 430:	01 96       	adiw	r24, 0x01	; 1
 432:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
		lcd_command_executer(lcd1,Display_on_showcursor_noBlink);
 436:	6e e0       	ldi	r22, 0x0E	; 14
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	ce 01       	movw	r24, r28
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command_executer>
 442:	2f e9       	ldi	r18, 0x9F	; 159
 444:	86 e8       	ldi	r24, 0x86	; 134
 446:	91 e0       	ldi	r25, 0x01	; 1
 448:	21 50       	subi	r18, 0x01	; 1
 44a:	80 40       	sbci	r24, 0x00	; 0
 44c:	90 40       	sbci	r25, 0x00	; 0
 44e:	e1 f7       	brne	.-8      	; 0x448 <__DATA_REGION_LENGTH__+0x48>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 452:	00 00       	nop
 454:	ea cf       	rjmp	.-44     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>

00000456 <_exit>:
 456:	f8 94       	cli

00000458 <__stop_program>:
 458:	ff cf       	rjmp	.-2      	; 0x458 <__stop_program>
